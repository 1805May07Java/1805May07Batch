--2.1
Select * from Employee;

Select * from Employee where lastname = 'King';

Select * from Employee where firstname = 'Andrew' and REPORTSTO = NULL;

--2.2
Select * from Album order by title desc;

Select firstname from Customer order by city asc;

--2.3
Insert into Genre values (26,'Sound Effects');
Insert into Genre values (27,'Personal Recordings');

Insert into Employee values (9, 'LASTNAME', 'FIRSTNAME', 'TITLE', null, '18-FEB-62', '18-FEB-62', 'ADDRESS', 'CITY', 'STATE', 'COUNTRY', 'POSTALCODE', 241342234, 241342234, 'EMAIL');
Insert into Employee values (10, 'LASTNAME', 'FIRSTNAME', 'TITLE', null, '18-FEB-62', '18-FEB-62', 'ADDRESS', 'CITY', 'STATE', 'COUNTRY', 'POSTALCODE', 241342234, 241342234, 'EMAIL');

Insert into Customer values (60,	'Luís',	'Gonçalves',	'Embraer - Empresa Brasileira de Aeronáutica S.A.',	'Av. Brigadeiro Faria Lima, 2170', 'São José dos Campos',	'SP',	'Brazil',	'12227-000',	'+55 (12) 3923-5555',	'+55 (12) 3923-5566',	'luisg@embraer.com.br',3);
Insert into Customer values (61,	'Luís',	'Gonçalves',	'Embraer - Empresa Brasileira de Aeronáutica S.A.',	'Av. Brigadeiro Faria Lima, 2170', 'São José dos Campos',	'SP',	'Brazil',	'12227-000',	'+55 (12) 3923-5555',	'+55 (12) 3923-5566',	'luisg@embraer.com.br',3);

--2.4
Update Customer set firstname = 'Robert Walter' where firstname = 'Aaron Mitchell'; 

Update artist set name = 'CCR' where name = 'Creedence Clearwater Revival';

--2.5
Select * from invoice where billingaddress like 'T%';

--2.6
--Select * from invoices where (total > 15) and (total < 50);

--Select * from employees where hiredate between 1stof June 2003 and 1stof March 2004;

--2.7
delete from customer where firstname = 'Robert' and lastname = 'Walter';

--3.1
create or replace function getSysdate
return date is
  l_sysdate date;

begin
  select sysdate
    into l_sysdate
    from dual;

  return l_sysdate;
end;

select getsysdate() from dual;

--create a function that returns the length of a mediatype from the mediatype table

--3.2
--Create a function that returns the average total of all invoices

select max(unitprice) from track;

create or replace function getMostExpensiveTrack
return number is
  price number;
begin
  select max(unitprice)
  into price
  from track;
  return price;

end;
/

select getMostExpensiveTrack from dual;

--3.3
create or replace function avgInvoice
return number is
  average number;
begin
  select avg(total)
    into average
    from invoice;
  return average;
end;
/

select avgInvoice from dual;

--3.4
CREATE OR REPLACE FUNCTION AFTER_1968 RETURN SYS_REFCURSOR
IS
  EMPLOYEE_C SYS_REFCURSOR;
BEGIN
  OPEN EMPLOYEE_C FOR SELECT * FROM EMPLOYEE WHERE BIRTHDATE >= TO_DATE('01-01-1968','DD-MM-YYYY');
  RETURN EMPLOYEE_C;
END;
/

SELECT AFTER_1968 FROM DUAL;

--4.1
CREATE OR REPLACE PROCEDURE EMPLOYEE_INFO()
AS
BEGIN
  SELECT FIRSTNAME, LASTNAME FROM EMPLOYEE;
END;

--4.2
create or replace procedure getManagers(
empid in number,
cursor1 out sys_refcursor
)
as
begin
  open cursor1 for
  select * from employee
  where employeeid = (
    select reportsto
    from employee
    where employeeid = empid
  );
end;
/

--4.3
create or replace procedure customerinfo(
cusid in number,
cursor1 out sys_refcursor
)
as
begin
  open cursor1 for
  select * 
  from customer
  where customerid = cusid;
end;
/

--5
create or replace procedure deleteInvoice(
  invid in number
)
as
begin
  delete from invoiceline
  where invoiceid = invid;
  
  delete from invoice
  where invoiceid = invid;
  commit;
end;
/

create or replace procedure insertCustomer(
  fn in varchar2,
  ln in varchar2,
  cus_email in varchar2
)
as
begin
  insert into customer (firstname, lastname, email) values (fn, ln, cus_email);
  commit;
end;
/
--6.1
create or replace trigger insertEmployee
after insert
on employee
for each row
begin
  dbms_output.put_line('new employee inserted');
end;
/

create or replace trigger deleteCustomer
after delete
on customer
for each row
begin
  dbms_output.put_line('customer deleted');
end;
/

--7.1
select customer.firstname, invoice.invoiceid
from customer
inner join invoice
on customer.customerid = invoice.invoiceid;

--7.2
select invoice.customerid, customer.firstname, customer.lastname, invoice.invoiceid, invoice.total
from customer
full outer join invoice
on customer.customerid = invoice.invoiceid;

--7.3
select artist.name, album.title
from album
right join artist
on album.artistid = artist.artistid;

--7.4
select artist.name
from artist
cross join album
order by artist.name asc;

--7.5
select x.firstname, x.lastname
from employee x, employee y
where x.reportsto = y.reportsto
order by lastname asc;
