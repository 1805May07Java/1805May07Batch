package com.ex.dao;

import java.util.ArrayList;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.ex.pojos.Customer;
import com.ex.util.ConnectionFactory;

public class UserDaoImpl implements UserDao <Customer> {

	@Override
	public List<Customer> getAllCustomers() {
		List<Customer> customers = new ArrayList<Customer>();
		try(Connection conn = ConnectionFactory.getInstance().getConnection();){
			String query = "select * from users";
			
			Statement statement = conn.createStatement();
			ResultSet rs = statement.executeQuery(query);
			
			while(rs.next()) {
				Customer temp = new Customer();
				temp.setId(rs.getInt(1));
				temp.setFirstname(rs.getString(2));
				temp.setLastname(rs.getString(3));
				temp.setUsername(rs.getString(4));
				temp.setPassword(rs.getString(5));
				temp.setBalance(rs.getDouble(6));
				temp.setZipcode(rs.getInt(7));
				customers.add(temp);				
			}
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		
		return customers;
	}

	@Override
	public Customer addCustomer(Customer obj) {
		Customer newCustomer = new Customer();
		
		try(Connection conn = ConnectionFactory.getInstance().getConnection();){
			conn.setAutoCommit(false);
			String query = "insert into users(firstname, lastname, username, password, balance, zipcode)" + "values(?,?,?,?,?,?)";
			
			String[] keys = new String[1];
			keys[0] = "userid";
			
			PreparedStatement ps = conn.prepareStatement(query, keys);
			
			ps.setString(1, obj.getFirstname());
			ps.setString(2, obj.getLastname());
			ps.setString(3, obj.getUsername());
			ps.setString(4, obj.getPassword());
			ps.setDouble(5, obj.getBalance());
			ps.setInt(6, obj.getZipcode());
			
			int rows = ps.executeUpdate();
			System.out.println("rows returned " + rows);
			
			
			if(rows != 0) {
				ResultSet pk = ps.getGeneratedKeys();
				while(pk.next()) {
					newCustomer.setId(pk.getInt(1));
				}	
				conn.commit();
			}		
		} catch (SQLException e) {
			
			e.printStackTrace();
		}
		
		
		
		
		return null;
	}

	@Override
	public boolean isUniqueUsername(Customer obj) {
		String username = obj.getUsername();
		boolean exists = false;
		try(Connection conn = ConnectionFactory.getInstance().getConnection();){
			String query = "select * from users where username = ?";
			PreparedStatement ps = conn.prepareStatement(query);
			
			ps.setString(1, username);
			
			ResultSet info = ps.executeQuery();
			System.out.println("in username isunique");
			exists = info.next();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		
		
		return exists;
		
	}

	@Override
	public boolean isUniquePassword(Customer obj) {
		String password = obj.getPassword();
		boolean exists = false;
		try(Connection conn = ConnectionFactory.getInstance().getConnection();){
			String query = "select * from users where password = ?";
			PreparedStatement ps = conn.prepareStatement(query);
			
			ps.setString(1, password);
			
			ResultSet info = ps.executeQuery();
			System.out.println("in password isunique");
			exists = info.next();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return exists;
	}

}
